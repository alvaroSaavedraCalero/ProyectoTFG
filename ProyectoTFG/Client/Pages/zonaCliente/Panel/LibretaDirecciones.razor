@inject NavigationManager navigate
@inject IRestService restService
@inject IStorageService storageService
@inject IJSRuntime jsService

<div class="container border border-2 rounded-2 bg-light text-center">
    @if (MostrarCompMod)
    {
        <ComponenteDireccion DireccionEdit="@Direc" Funcion="@FuncionCompoDirec" />
    }
    else
    {
        @if (ClienteActual.MisDirecciones.Count == 0)
        {
            <ComponenteDireccion DireccionEdit="@Direc" Funcion="guardar" />
        }
        else
        {
            <div class="row m-md-2">
                <span class="text-info">@MensajeServidor</span>
            </div>
            <div class="row m-xl-2 text-cente d-flex justify-content-center align-items-center">
                <!-- Direccion de facturacion -->
                <div class="col-sm-5 border border-2 rounded-2 m-3" style="background-color: lightslategray">
                    <h4 class="text-black m-4"><b>Dirección de factur. predeterminada</b></h4>

                    @if (direcFactu != null)
                    {
                        <div class="row">
                            <div class="col-6 m-2">
                                <span class="d-block">@direcFactu.NombreContacto @direcFactu.ApellidosContacto</span>
                                @if (!String.IsNullOrEmpty(direcFactu.NombreEmpresa))
                                {
                                    <span>@direcFactu.NombreEmpresa</span>
                                }
                                <span class="d-block">@direcFactu.Calle, @direcFactu.Numero</span>
                                <span class="d-block">@direcFactu.MuniDirecc.DMUN50</span>
                                <span class="d-block">@direcFactu.CP</span>
                                <span class="d-block">@direcFactu.Pais</span>
                                <span class="d-block">@direcFactu.TelefonoContacto</span>
                            </div>
                            <div class="col-5">
                                <div class="mt-3">
                                    <button class="btn btn-dark" @onclick="@(() => ActivarComponente(direcFactu, "modificar"))">Modificar</button>
                                </div>
                                <div class="mt-3">
                                    <button class="btn btn-danger" @onclick="@(() => EliminarDireccion(direcFactu))">Eliminar</button>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="m-3">
                            <span>No ha establecido una dirección de facturación predeterminada.</span>
                        </div>
                    }
                </div>
                <!-- Direccion de envio -->
                <div class="col-sm-5 border border-2 rounded-2 m-3" style="background-color: lightslategray">
                    <h4 class="text-black m-4"><b>Dirección de envío predeterminada</b></h4>
                    @if (direcEnvio != null)
                    {
                        <div class="row">
                            <div class="col-6 m-2">
                                <span class="d-block">@direcEnvio.NombreContacto @direcEnvio.ApellidosContacto</span>
                                @if (!String.IsNullOrEmpty(direcEnvio.NombreEmpresa))
                                {
                                    <span>@direcEnvio.NombreEmpresa</span>
                                }
                                <span class="d-block">@direcEnvio.Calle, @direcEnvio.Numero</span>
                                <span class="d-block">@direcEnvio.MuniDirecc.DMUN50</span>
                                <span class="d-block">@direcEnvio.CP</span>
                                <span class="d-block">@direcEnvio.Pais</span>
                                <span class="d-block">@direcEnvio.TelefonoContacto</span>
                            </div>
                            <div class="col-5">
                                <div class="mt-3">
                                    <button class="btn btn-dark" @onclick="@(() => ActivarComponente(direcEnvio, "modificar"))">Modificar</button>
                                </div>
                                <div class="mt-3">
                                    <button class="btn btn-danger" @onclick="@(() => EliminarDireccion(direcEnvio))">Eliminar</button>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="m-3">
                            <span>No ha establecido una dirección de envío predeterminada.</span>
                        </div>
                    }
                </div>
            </div>
            <div class="row mb-1"><h3 class="text-black"><b>Libreta de Direcciones</b></h3></div>
            @if (ClienteActual.MisDirecciones.Count > 2 || ClienteActual.MisDirecciones.Any((Direccion d) => d.EsFaturacion == false || d.EsEnvio == false))
            {
                @foreach (Direccion d in ClienteActual.MisDirecciones)
                {
                    <div class="row border bg-info rounded-3 m-5">
                        <div class="col-8">
                            <h4 class="text-black"><b>Id Direccion: @d.IdDireccion.Substring(0, 5)</b></h4>
                            <span>@d.Calle, @d.Numero, @d.CP</span>
                            <span>@d.MuniDirecc.DMUN50, @d.ProvDirec.PRO</span>
                        </div>
                        <div class="col-4">
                            <div class="flex d-flex">
                                <div class="me-3 mt-2">
                                    <button class="btn btn-dark" @onclick="@(() => ActivarComponente(d, "modificar"))">Modificar</button>
                                </div>
                                <div class="ms-3 mt-2">
                                    <button class="btn btn-danger" @onclick="@(() => EliminarDireccion(d))">Eliminar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <button class="btn btn-dark text-white rounded-pill mb-3" @onclick="@(() => ActivarComponente(Direc, "guardar"))">Añadir dirección</button>
            }
            else
            {
                <div class="row m-xl-2"><span class="text-black"><b>No tiene otras entradas de direcciones en la libreta de direcciones.</b></span></div>
                <div class="row m-xl-2">
                    <div class="col-md-6">
                        <a @onclick="@(()=>this.navigate.NavigateTo("/Cliente/PanelCliente"))"><span>Volver</span></a>
                    </div>
                    <div class="col-md-6">
                        <button class="btn btn-dark text-white rounded-pill mb-3" @onclick="@(() => ActivarComponente(Direc, "guardar"))">Añadir dirección</button>
                    </div>
                </div>
            }
        }
    }
</div>

@code {
    public Cliente? ClienteActual { get; set; } = new Cliente();
    public List<Direccion>? ListaDirecciones { get; set; } = new List<Direccion>();

    private String? MensajeServidor = "";
    private Boolean MostrarCompMod = false;

    private Direccion Direc = new Direccion();
    private String FuncionCompoDirec = "";

    private Direccion? direcFactu = new Direccion();
    private Direccion? direcEnvio = new Direccion();


    protected override void OnInitialized()
    {
        this.ClienteActual = this.storageService.RecuperarDatosCliente();
        if (this.ClienteActual != null)
        {
            this.ListaDirecciones = this.ClienteActual.MisDirecciones;

            if (this.ListaDirecciones.Count != 0)
            {
                direcFactu = ClienteActual.MisDirecciones.Find((Direccion d) => d.EsFaturacion == true);
                direcEnvio = ClienteActual.MisDirecciones.Find((Direccion d) => d.EsEnvio == true);
            }
        }
    }


    public async Task ActivarComponente(Direccion dir, String funcion)
    {
        FuncionCompoDirec = funcion;
        Direc = dir;
        MostrarCompMod = true;
    }

    public async Task EliminarDireccion(Direccion direccion)
    {
        String jwt = this.storageService.RecuperarJWT();
        RestMessage respuestaREST = await this.restService.EliminarDireccion(direccion, ClienteActual, jwt);

        this.MensajeServidor = respuestaREST.Mensaje;

        switch (respuestaREST.Codigo)
        {
            case 0: 
                this.ClienteActual = respuestaREST.DatosCliente;
                this.storageService.AlmacenarDatosCliente(respuestaREST.DatosCliente);
                break;

            case 5:
                this.navigate.NavigateTo("/Cliente/Login");
                break;
        }

        if (ClienteActual.MisDirecciones.Count != 0)
        {
            direcFactu = ClienteActual.MisDirecciones.FirstOrDefault((Direccion d) => d.EsEnvio == true);
            direcEnvio = ClienteActual.MisDirecciones.FirstOrDefault((Direccion d) => d.EsFaturacion == true);
        }
        StateHasChanged();
    }
}
