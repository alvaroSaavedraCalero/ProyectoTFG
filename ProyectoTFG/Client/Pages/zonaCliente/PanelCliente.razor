@page "/Cliente/PanelCliente"

@inject IStorageService storageService
@inject NavigationManager navigate
@inject IJSRuntime jsService
@inject IRestService restService
@using ProyectoTFG.Client.Pages.zonaCliente.Panel
@using ProyectoTFG.Client.Pages.zonaAdministracion
@using Microsoft.Extensions.Primitives
@using Microsoft.AspNetCore.WebUtilities


<div class="container ">
    <div class="row m-5 mt-5 mb-5 ms-5 me-5">
        @if (this.ClienteActual.Rol == "Administrador")
        {
            <div class="col-lg-3 col-md-3">
                <aside class="card">
                    <h1 class="card-header text-black">Mi cuenta</h1>
                    <div class="card-body grid d-flex flex-column">
                        <a @onclick="() =>{ActivarNegrita(1); StateHasChanged();}"><span class="@clase1">Administracion de clientes</span></a>
                        <a @onclick="() =>{ActivarNegrita(2); StateHasChanged();}"><span class="@clase2">Panel de control</span></a>
                        <a @onclick="() =>{ActivarNegrita(3); StateHasChanged();}"><span class="@clase3">Información de la cuenta</span></a>
                        <a @onclick="() =>{ActivarNegrita(4); StateHasChanged();}"><span class="@clase4">Libreta de Direcciones</span></a>
                        <a @onclick="() =>{ActivarNegrita(5); StateHasChanged();}"><span class="@clase5">Mis pedidos</span></a>
                    </div>
                </aside>
            </div>
            <div class="col-lg-9 col-md-8">
                <main>
                    @switch (ItemLista)
                    {
                        case 1:
                            <VerClientes />
                            break;

                        case 2:
                            <PanelDeControl />
                            break;

                        case 3:
                            <InfoCuenta />
                            break;

                        case 4:
                            <LibretaDirecciones />
                            break;

                        case 5:
                            <MisPedidos />
                            break;
                    }
                </main>
            </div>
        }
        else
        {
            <!-- Zona aside -->
            <div class="col-lg-3 col-md-3">
                <aside class="card">
                    <h1 class="card-header text-black">Mi cuenta</h1>
                    <div class="card-body grid d-flex flex-column">
                        <a @onclick="() =>{ActivarNegrita(1); StateHasChanged();} "><span class="@clase1">Panel de control</span></a>
                        <a @onclick="() =>{ActivarNegrita(2); StateHasChanged();} "><span class="@clase2">Información de la cuenta</span></a>
                        <a @onclick="() =>{ActivarNegrita(3); StateHasChanged();} "><span class="@clase3">Libreta de Direcciones</span></a>
                        <a @onclick="() =>{ActivarNegrita(4); StateHasChanged();} "><span class="@clase4">Mis pedidos</span></a>
                    </div>
                </aside>
            </div>
            <div class="col-lg-9 col-md-8">
                <main>
                    @switch (ItemLista)
                    {
                        case 1:
                            <PanelDeControl />
                            break;

                        case 2:
                            <InfoCuenta />
                            break;

                        case 3:
                            <LibretaDirecciones />
                            break;

                        case 4:
                            <MisPedidos />
                            break;
                    }
                </main>
            </div>
        }
    </div>
</div>


@code {
    public Cliente? ClienteActual { get; set; }
    private int ItemLista = 0;
    private String textoNegrita = "fw-bold";


    // Strings de clases del aside
    private String clase1 = "";
    private String clase2 = "";
    private String clase3 = "";
    private String clase4 = "";
    private String clase5 = "";
    private String clase6 = "";

    protected override async Task OnInitializedAsync()
    {
        UriBuilder uri = new UriBuilder(navigate.Uri);
        Dictionary<String, StringValues> queryString = QueryHelpers.ParseQuery(uri.Query);
        if (queryString.Count == 0)
        {
            // Significa que el login se ha realizado de manera "interna" (sin google)
            this.ClienteActual = this.storageService.RecuperarDatosCliente();
            if (this.ClienteActual == null)
            {
                this.navigate.NavigateTo("/Cliente/Login");
            }

            ActivarNegrita(1);
        }
        else
        {
            // Se han logueado con google
            String idgooglesesion = queryString["idgooglesesion"];

            // Hay que obtener el cliente registrado con google a traves de este idgoogle
            // y guardarlo en el cliente actual
            RestMessage respuestaServer = await this.restService.ObtenerClienteGoogle(idgooglesesion);
            if (respuestaServer.Codigo == 0)
            {
                this.storageService.AlmacenarDatosCliente(respuestaServer.DatosCliente);
                this.storageService.AlmacenarJWT(respuestaServer.TokenSesion);
                this.ClienteActual = respuestaServer.DatosCliente;
                ActivarNegrita(1);
            }
            else
            {
                this.navigate.NavigateTo("/Cliente/Login");
            }
        }
        queryString.Remove("idgooglesesion");
        uri.Query = queryString.ToString();
        this.navigate.NavigateTo("/Cliente/PanelCliente");
    }

    protected override void OnParametersSet()
    {
        this.ClienteActual = this.storageService.RecuperarDatosCliente();
        base.OnParametersSet();
    }


    private void ActivarNegrita(int i)
    {
        switch (i)
        {
            case 1:
                clase1 = textoNegrita;
                clase2 = "";
                clase3 = "";
                clase4 = "";
                clase5 = "";
                clase6 = "";
                ItemLista = 1;
                break;

            case 2:
                clase1 = "";
                clase2 = textoNegrita;
                clase3 = "";
                clase4 = "";
                clase5 = "";
                clase6 = "";
                ItemLista = 2;
                break;

            case 3:
                clase1 = "";
                clase2 = "";
                clase3 = textoNegrita;
                clase4 = "";
                clase5 = "";
                clase6 = "";
                ItemLista = 3;
                break;

            case 4:
                clase1 = "";
                clase2 = "";
                clase3 = "";
                clase4 = textoNegrita;
                clase5 = "";
                clase6 = "";
                ItemLista = 4;
                break;

            case 5:
                clase1 = "";
                clase2 = "";
                clase3 = "";
                clase4 = "";
                clase5 = textoNegrita;
                clase6 = "";
                ItemLista = 5;
                break;

            case 6:
                clase1 = "";
                clase2 = "";
                clase3 = "";
                clase4 = "";
                clase5 = "";
                clase6 = textoNegrita;
                ItemLista = 6;
                break;

        }
    }

}
